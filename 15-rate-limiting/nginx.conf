user www-data;

worker_processes auto;

events {
    worker_connections 1024;
}

http {

    include mime.types;
    
    # Rate limiting is limiting the number of concurrent connections/requests that nginx will handle
    # Define rate limit zone - this will be a zone in memory
    # Alternatives: $server_name - this will rate limit the entire server
    # $binary_remote_addr - this will rate limit individual users useful for stopping brute force attacks
    # $request_uri - limit requests per uri
    # rate is defined as a number of requests "r" "/" per nginx time here "s" for seconds
    limit_req_zone $request_uri=MYZONE:10m rate=1r/s;

    server {
        listen 80;
        server_name 192.168.2.77;

        return 301 https://$host$request_uri;
    }
    
    server {
        listen 443 ssl http2; 
        server_name 192.168.2.77;

        root /sites/demo;

        index index.php index.html;

        ssl_certificate /etc/nginx/ssl/self.crt;
        ssl_certificate_key /etc/nginx/ssl/self.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        add_header Strict-Transport-Security "max-age=31536000" always;

        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;

        location / {
            # this is using the limit_req_zone defined above
            # burst changes the number of other requests to also be fufilled before the ratelimit kicks in and
            # will wait instead of rejecting rate + burst = rate limit, above this will be rejected 503
            # "nodelay" will ensure that there is no delay on responses untill the rate limit is reached
            limit_req zone=MYZONE burst=5 nodelay;
            try_files $uri $uri/ =404;
        }

        location ~\.php$ {
            include fastcgi.conf;
            fastcgi_pass unix:/run/php/php7.2-fpm.sock;
        }
    }
}
